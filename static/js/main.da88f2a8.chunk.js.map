{"version":3,"sources":["reducers/ObjectiveReducer/ObjectiveMock.js","reducers/index.js","reducers/ObjectiveReducer/ObjectivesReducer.js","actions/types.js","components/Objective/ObjectiveCard.js","components/ProgressDetail/ProgressLog.js","components/KeyResult/KeyResultList.js","components/Objective/ObjectiveModal.js","components/Objective/NewObjectiveCard.js","actions/index.js","components/Objective/NewObjectiveModal.js","components/Objective/ObjectiveList.js","pages/Dashboard.js","App.js","index.js"],"names":["mockObjective","label","progress","keyResults","progressDetailList","combineReducers","objectives","state","action","type","objective","ObjectiveCard","onCardClick","Box","direction","basis","pad","margin","elevation","animation","onClick","hoverIndicator","Heading","Meter","values","value","ProgressLog","this","props","map","progressDetail","key","vertical","StatusGoodSmall","color","Text","left","renderList","Component","KeyResultList","keyResult","AccordionPanel","Accordion","renderCard","ObjectiveModal","Layer","onEsc","onCardClose","onClickOutside","full","justify","align","Close","horizontal","top","NewObjectiveCard","background","Add","addObjective","NewObjectiveModal","objectiveLabel","keyResultLabel","editHeading","addKeyResult","onCloseModal","onObjectiveEnter","e","setState","onKeyResultEnter","handleKeyResult","onAddClick","TextInput","placeholder","onChange","target","onKeyDown","Button","renderHeading","renderKeyResultInput","renderAddButton","connect","dispatch","bindActionCreators","ObjectiveList","showModal","showNewModal","selectedObjective","openObjective","closeObjective","openNewObjective","closeNewObjective","index","wrap","renderModal","Dashboard","textAlign","App","Grommet","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da88f2a8.chunk.js","sourcesContent":["export const mockObjective = {\n  label: 'Getting Start OKRS',\n  progress: 100,\n  keyResults: [{\n    label: 'take a quick tour',\n    progress: 0,\n    progressDetailList: [{\n      label: 'follow us',\n      progress: 0\n    }]\n  },\n  {\n    label: 'create your new objective',\n    progress: 0,\n    progressDetailList: [{\n      label: 'try to create',\n      progress: 0\n    },\n  {\n    label: 'add your key result',\n    progress: 0\n  }]\n  }]\n}\n","import { combineReducers } from 'redux'\nimport objectivesReducer from './ObjectiveReducer/ObjectivesReducer'\n\nexport default combineReducers({\n  objectives: objectivesReducer\n})\n","import { ADD_OBJECTIVE } from '../../actions/types'\nimport { mockObjective } from './ObjectiveMock'\n\nexport default (state = [mockObjective], action) => {\n  switch(action.type) {\n    case ADD_OBJECTIVE: return [...state, action.objective]\n  }\n  return state\n}\n","export const ADD_OBJECTIVE = 'ADD_OBJECTIVE'\n","import React from 'react'\nimport { Box, Heading, Meter } from 'grommet'\n\nconst ObjectiveCard = ({ objective, onCardClick }) => {\n  return (\n    <Box\n      direction='column'\n      basis='medium'\n      pad='medium'\n      margin='medium'\n      elevation='small'\n      animation='fadeIn'\n      onClick={() => onCardClick(objective)}\n      hoverIndicator>\n      <Heading>{objective.label}</Heading>\n      <Meter\n        values={[{\n          value: objective.progress,\n          label: `${objective.progress} %`,\n        }]}/>\n    </Box>\n  )\n}\n\nexport default ObjectiveCard\n","import React, { Component } from 'react'\nimport { Box, Text } from 'grommet'\nimport { StatusGoodSmall } from 'grommet-icons'\n\nclass ProgressLog extends Component {\n  renderList() {\n    return this.props.progressDetailList.map((progressDetail) => {\n      return (\n        <Box\n          key={progressDetail.label}\n          direction='row'\n          margin={{ vertical: 'medium' }}>\n          <Box>\n            <StatusGoodSmall color='accent-1'/>\n          </Box>\n\n          <Box>\n            <Text margin={{ left: 'medium'}}>\n              {progressDetail.label}\n            </Text>\n          </Box>\n        </Box>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <>\n      {this.renderList()}\n      </>\n    )\n  }\n}\n\nexport default ProgressLog\n","import React, { Component } from 'react'\nimport { Box, Accordion, AccordionPanel } from 'grommet'\nimport ProgressLog from '../ProgressDetail/ProgressLog'\n\nclass KeyResultList extends Component {\n  renderCard() {\n    return this.props.keyResults.map((keyResult) => {\n      return (\n        <AccordionPanel\n          key={keyResult.label}\n          label={keyResult.label}\n          >\n          <Box>\n            <ProgressLog progressDetailList={keyResult.progressDetailList}/>\n          </Box>\n        </AccordionPanel>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <Accordion>\n          {this.renderCard()}\n      </Accordion>\n    )\n  }\n}\n\nexport default KeyResultList\n","import React from 'react'\nimport { Layer, Box, Heading } from 'grommet'\nimport { Close } from 'grommet-icons'\nimport KeyResultList from '../KeyResult/KeyResultList'\n\nconst ObjectiveModal = (props) => {\n  return (\n    <Layer\n      onEsc={props.onCardClose}\n      onClickOutside={props.onCardClose}\n      margin='xlarge'\n      full>\n      <Box\n        direction='row'>\n        <Box basis='3/4'>\n          <Heading margin={{ left: 'medium'}}>{props.objective.label}</Heading>\n        </Box>\n\n        <Box\n          basis='1/4'\n          justify='center'\n          align='center'\n          onClick={props.onCardClose}\n          hoverIndicator>\n          <Close/>\n        </Box>\n      </Box>\n\n      <Box margin={{ horizontal: 'large', top: 'medium'}}>\n        <KeyResultList keyResults={props.objective.keyResults}/>\n      </Box>\n    </Layer>\n  )\n}\n\nexport default ObjectiveModal\n","import React from 'react'\nimport { Box, Heading, Meter, Text } from 'grommet'\nimport { Add } from 'grommet-icons'\n\nconst NewObjectiveCard = ({ onCardClick }) => {\n  return (\n    <Box\n      direction='column'\n      basis='medium'\n      pad='medium'\n      margin='medium'\n      elevation='small'\n      animation='fadeIn'\n      onClick={onCardClick}\n      background='dark-3'\n      hoverIndicator={{ color: 'dark-2' }}>\n\n      <Heading>\n        <Add/>\n        {'New Objective'}\n      </Heading>\n\n    </Box>\n  )\n}\n\nexport default NewObjectiveCard\n","import { ADD_OBJECTIVE } from './types'\n\nexport const addObjective = (objective) => {\n  return {\n    type: ADD_OBJECTIVE,\n    objective\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addObjective } from '../../actions'\nimport { Layer, Box, Heading, TextInput, Button } from 'grommet'\nimport { Close } from 'grommet-icons'\nimport KeyResultList from '../KeyResult/KeyResultList'\n\nclass NewObjectiveModal extends Component {\n  state = {\n    objectiveLabel: '',\n    keyResultLabel: '',\n    keyResults: [],\n    editHeading: true,\n    addKeyResult: false,\n  }\n\n  onCloseModal = () => {\n    // firebase save\n    if(this.state.objectiveLabel !== '') {\n      this.props.addObjective({\n        label: this.state.objectiveLabel,\n        progress: 0,\n        keyResults: this.state.keyResults\n      })\n    }\n    this.props.onCardClose()\n  }\n\n  onObjectiveEnter = (e) => {\n    if(e.key === 'Enter' && this.state.objectiveLabel !== '') {\n      this.setState({ editHeading: false })\n      // dispatch to store\n    }\n  }\n\n  onKeyResultEnter = (e) => {\n    if(e.key === 'Enter' && this.state.keyResultLabel !== '') {\n      // save\n      this.handleKeyResult()\n    }\n  }\n\n  onAddClick = () => {\n    if(this.state.keyResultLabel !== '') {\n      this.handleKeyResult()\n    }\n    this.setState({ addKeyResult: !this.state.addKeyResult })\n  }\n\n  handleKeyResult = () => {\n    let keyResult = {\n      label: this.state.keyResultLabel,\n      progress: 0,\n      progressDetailList: []\n    }\n    this.setState({ keyResults: [...this.state.keyResults, keyResult] })\n    this.setState({ keyResultLabel: '' })\n  }\n\n  renderHeading() {\n    return this.state.editHeading ? (\n      <TextInput\n        placeholder='Objective Title'\n        value={this.state.objectiveLabel}\n        onChange={(e) => this.setState({ objectiveLabel: e.target.value })}\n        onKeyDown={this.onObjectiveEnter}/>\n    )  : (\n      this.state.objectiveLabel\n    )\n  }\n\n  renderAddButton() {\n    return this.state.objectiveLabel !== '' && (\n      <Button\n        margin={{vertical: 'medium'}}\n        label='Add Key Result'\n        onClick={this.onAddClick}/>\n    )\n  }\n\n  renderKeyResultInput() {\n    return this.state.addKeyResult && (\n      <TextInput\n         placeholder='Key Result'\n         value={this.state.keyResultLabel}\n         onChange={(e) => this.setState({ keyResultLabel: e.target.value })}\n         onKeyDown={this.onKeyResultEnter}/>\n    )\n  }\n\n  render() {\n    return (\n      <Layer\n        onEsc={this.onCloseModal}\n        onClickOutside={this.onCloseModal}\n        margin='xlarge'\n        full>\n        <Box\n          direction='row'>\n          <Box basis='3/4'>\n            <Heading\n              margin={{ left: 'medium'}}\n              onClick={() => this.setState({ editHeading: true })}>\n              {this.renderHeading()}\n            </Heading>\n          </Box>\n\n          <Box\n            basis='1/4'\n            justify='center'\n            align='center'\n            onClick={this.onCloseModal}\n            hoverIndicator>\n            <Close/>\n          </Box>\n        </Box>\n\n        <Box margin={{ horizontal: 'large', top: 'medium'}}>\n          <KeyResultList keyResults={this.state.keyResults}/>\n          {this.renderKeyResultInput()}\n          {this.renderAddButton()}\n        </Box>\n      </Layer>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    addObjective\n  }, dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(NewObjectiveModal)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Box } from 'grommet'\nimport ObjectiveCard from './ObjectiveCard'\nimport ObjectiveModal from './ObjectiveModal'\nimport NewObjectiveCard from './NewObjectiveCard'\nimport NewObjectiveModal from './NewObjectiveModal'\n\nclass ObjectiveList extends Component {\n  state = {\n    showModal: false,\n    showNewModal: false,\n    selectedObjective: null\n  }\n\n  openObjective = (objective) => {\n    this.setState({ showModal: true, selectedObjective: objective })\n  }\n\n  closeObjective = () => {\n    this.setState({ showModal: false, selectedObjective: null })\n  }\n\n  openNewObjective = () => {\n    this.setState({ showNewModal: true })\n  }\n\n  closeNewObjective = () => {\n    this.setState({ showNewModal: false })\n  }\n\n\n  renderCard() {\n    return this.props.objectives.map((objective, index) => {\n      return (\n        <ObjectiveCard\n          key={objective.label + index}\n          objective={objective}\n          onCardClick={this.openObjective}/>\n      )\n    })\n  }\n\n  renderModal() {\n    return (this.state.showModal && (\n      <ObjectiveModal\n        objective={this.state.selectedObjective}\n        onCardClose={this.closeObjective}/>\n    )) ||\n    (this.state.showNewModal && (\n      <NewObjectiveModal onCardClose={this.closeNewObjective}/>\n    ))\n  }\n\n  render() {\n    return (\n      <Box\n        direction='row'\n        margin='medium' \n        wrap>\n        {this.renderCard()}\n        {this.renderModal()}\n        <NewObjectiveCard onCardClick={this.openNewObjective}/>\n      </Box>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nexport default connect(mapStateToProps)(ObjectiveList)\n","import React from 'react'\nimport { Box, Heading } from 'grommet'\nimport ObjectiveList from '../components/Objective/ObjectiveList'\n\nconst Dashboard = () => {\n  return (\n    <Box align='center'>\n      <Heading textAlign='center'>{'Dashboard'}</Heading>\n      <ObjectiveList/>\n    </Box>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport Dashboard from './pages/Dashboard'\n\nconst App = () => {\n  return (\n    <Grommet>\n      <Dashboard />\n    </Grommet>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducers from './reducers'\nimport App from './App'\n\nconst store = createStore(reducers)\n\nconst AppWithRedux = () => {\n  return (\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  )\n}\n\nReactDOM.render(<AppWithRedux/>, document.getElementById('root'))\n"],"sourceRoot":""}